import mongoose, { Schema, Document, Model } from "mongoose"

interface Answer extends Document {
    // Unique ID auto-generated by DB
    content: string
    isCorrect: boolean
}

interface QuizItem extends Document {
    // Unique ID auto-generated by DB
    question: string
    answers: Answer[]
}

interface Quiz extends Document {
    // Unique ID auto-generated by DB
    ownerId: string // Quiz owner's user ID
    name: string // Quiz name
    quizItems: QuizItem[] // Questions/Answers
}

const answerSchema = new Schema<Answer>({
    content: {
        type: String,
        required: true
    },
    isCorrect: {
        type: Boolean,
        required: true
    }
})

const quizItemSchema = new Schema<QuizItem>({
    question: {
        type: String,
        required: true
    },
    answers: {
        type: [answerSchema],
        required: true
    }
})

const quizSchema = new Schema<Quiz>({
    ownerId: {
        type: String,
        required: true
    },
    name: {
        type: String,
        required: true
    },
    quizItems: {
        type: [quizItemSchema],
        required: true
    }
})

// Construct the model and export it
const Answer: Model<Answer> = mongoose.models.Answer || mongoose.model<Answer>("Answer", answerSchema)
const QuizItem: Model<QuizItem> = mongoose.models.QuizItem || mongoose.model<QuizItem>("QuizItem", quizItemSchema)
const Quiz: Model<Quiz> = mongoose.models.Quiz || mongoose.model<Quiz>("Quiz", quizSchema)

export { Answer, QuizItem, Quiz }